#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    bytecblock "student" "" "award"
    txn ApplicationID
    bnz main_after_if_else@2
    // smart_contracts/hello_world/contract.algo.ts:5
    // student = GlobalState<string>({
    bytec_0 // "student"
    // smart_contracts/hello_world/contract.algo.ts:6
    // initialValue : ''
    bytec_1 // ""
    // smart_contracts/hello_world/contract.algo.ts:5-7
    // student = GlobalState<string>({
    //   initialValue : ''
    // })
    app_global_put
    // smart_contracts/hello_world/contract.algo.ts:8
    // award = GlobalState<string>({
    bytec_2 // "award"
    // smart_contracts/hello_world/contract.algo.ts:9
    // initialValue : ''
    bytec_1 // ""
    // smart_contracts/hello_world/contract.algo.ts:8-10
    // award = GlobalState<string>({
    //   initialValue : ''
    // });
    app_global_put

main_after_if_else@2:
    // smart_contracts/hello_world/contract.algo.ts:3
    // export class Certificate extends Contract {
    txn NumAppArgs
    bz main_bare_routing@8
    pushbytes 0x2c8c7e0b // method "issueCert(string,string)string"
    txna ApplicationArgs 0
    match main_issueCert_route@5

main_after_if_else@12:
    // smart_contracts/hello_world/contract.algo.ts:3
    // export class Certificate extends Contract {
    pushint 0 // 0
    return

main_issueCert_route@5:
    // smart_contracts/hello_world/contract.algo.ts:13
    // issueCert(name: string, award: string): string {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // smart_contracts/hello_world/contract.algo.ts:3
    // export class Certificate extends Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // smart_contracts/hello_world/contract.algo.ts:13
    // issueCert(name: string, award: string): string {
    callsub issueCert
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_bare_routing@8:
    // smart_contracts/hello_world/contract.algo.ts:3
    // export class Certificate extends Contract {
    txn OnCompletion
    bnz main_after_if_else@12
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return


// smart_contracts/hello_world/contract.algo.ts::Certificate.issueCert(name: bytes, award: bytes) -> bytes:
issueCert:
    // smart_contracts/hello_world/contract.algo.ts:13
    // issueCert(name: string, award: string): string {
    proto 2 1
    // smart_contracts/hello_world/contract.algo.ts:5
    // student = GlobalState<string>({
    bytec_0 // "student"
    // smart_contracts/hello_world/contract.algo.ts:14
    // this.student.value = name;
    frame_dig -2
    app_global_put
    // smart_contracts/hello_world/contract.algo.ts:8
    // award = GlobalState<string>({
    bytec_2 // "award"
    // smart_contracts/hello_world/contract.algo.ts:15
    // this.award.value = award;
    frame_dig -1
    app_global_put
    // smart_contracts/hello_world/contract.algo.ts:16
    // return "Certificate: " + name + " got " + award;
    pushbytes "Certificate: "
    frame_dig -2
    concat
    pushbytes " got "
    concat
    frame_dig -1
    concat
    retsub
